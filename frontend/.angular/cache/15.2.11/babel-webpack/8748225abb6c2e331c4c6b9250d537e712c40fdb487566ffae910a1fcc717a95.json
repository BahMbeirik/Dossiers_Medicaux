{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PatientService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n  }\n  getHeaders() {\n    const token = localStorage.getItem('access_token');\n    if (!token) {\n      throw new Error('Access token is missing.');\n    }\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    });\n  }\n  getPatients() {\n    return this.http.get(`${this.apiUrl}/auth/patients/`, {\n      headers: this.getHeaders()\n    });\n  }\n  getPatientById(id) {\n    return this.http.get(`${this.apiUrl}/auth/patients/${id}/`, {\n      headers: this.getHeaders()\n    });\n  }\n  addPatient(patient) {\n    return this.http.post(`${this.apiUrl}/auth/patients/`, patient, {\n      headers: this.getHeaders()\n    });\n  }\n  updatePatient(patient) {\n    return this.http.put(`${this.apiUrl}/auth/patients/${patient.id}/`, patient, {\n      headers: this.getHeaders()\n    });\n  }\n  deletePatient(id) {\n    return this.http.delete(`${this.apiUrl}/auth/patients/${id}/`, {\n      headers: this.getHeaders()\n    });\n  }\n  refreshToken() {\n    const refreshToken = localStorage.getItem('refresh_token');\n    return this.http.post(`${this.apiUrl}/auth/token/refresh/`, {\n      refresh: refreshToken\n    });\n  }\n  static {\n    this.ɵfac = function PatientService_Factory(t) {\n      return new (t || PatientService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PatientService,\n      factory: PatientService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,WAAW,QAAQ,gCAAgC;;;AAc5D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAGH,WAAW,CAACI,MAAM;EAEI;EAI/BC,UAAU;IAChB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,IAAI,CAACF,KAAK,EAAE;MACR,MAAM,IAAIG,KAAK,CAAC,0BAA0B,CAAC;;IAE/C,OAAO,IAAIV,WAAW,CAAC;MACnB,cAAc,EAAE,kBAAkB;MAClCW,aAAa,EAAE,UAAUJ,KAAK;KACjC,CAAC;EACN;EAGEK,WAAW;IACT,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAY,GAAG,IAAI,CAACR,MAAM,iBAAiB,EAAE;MAAES,OAAO,EAAE,IAAI,CAACR,UAAU;IAAE,CAAE,CAAC;EAClG;EAEAS,cAAc,CAACC,EAAU;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACS,GAAG,CAAU,GAAG,IAAI,CAACR,MAAM,kBAAkBW,EAAE,GAAG,EAAE;MAAEF,OAAO,EAAE,IAAI,CAACR,UAAU;IAAE,CAAE,CAAC;EACtG;EAEAW,UAAU,CAACC,OAAgB;IACzB,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAU,GAAG,IAAI,CAACd,MAAM,iBAAiB,EAAEa,OAAO,EAAE;MAAEJ,OAAO,EAAE,IAAI,CAACR,UAAU;IAAE,CAAE,CAAC;EAC1G;EAEAc,aAAa,CAACF,OAAgB;IAC5B,OAAO,IAAI,CAACd,IAAI,CAACiB,GAAG,CAAU,GAAG,IAAI,CAAChB,MAAM,kBAAkBa,OAAO,CAACF,EAAE,GAAG,EAAEE,OAAO,EAAE;MAAEJ,OAAO,EAAE,IAAI,CAACR,UAAU;IAAE,CAAE,CAAC;EACvH;EAEAgB,aAAa,CAACN,EAAU;IACtB,OAAO,IAAI,CAACZ,IAAI,CAACmB,MAAM,CAAO,GAAG,IAAI,CAAClB,MAAM,kBAAkBW,EAAE,GAAG,EAAE;MAAEF,OAAO,EAAE,IAAI,CAACR,UAAU;IAAE,CAAE,CAAC;EACtG;EAEAkB,YAAY;IACV,MAAMA,YAAY,GAAGhB,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC1D,OAAO,IAAI,CAACL,IAAI,CAACe,IAAI,CAAC,GAAG,IAAI,CAACd,MAAM,sBAAsB,EAAE;MAAEoB,OAAO,EAAED;IAAY,CAAE,CAAC;EACxF;;;uBA1CWtB,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAwB,SAAdxB,cAAc;MAAAyB,YAFb;IAAM;EAAA","names":["HttpHeaders","environment","PatientService","constructor","http","apiUrl","getHeaders","token","localStorage","getItem","Error","Authorization","getPatients","get","headers","getPatientById","id","addPatient","patient","post","updatePatient","put","deletePatient","delete","refreshToken","refresh","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\services\\patient.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\nexport interface Patient {\n  id: number;\n  numero_identite: string;\n  nom: string;\n  prenom: string;\n  age: number;\n  numero_telephone: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  \n  \n  private getHeaders(): HttpHeaders {\n    const token = localStorage.getItem('access_token');\n    if (!token) {\n        throw new Error('Access token is missing.');\n    }\n    return new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n    });\n}\n\n  \n  getPatients(): Observable<Patient[]> {\n    return this.http.get<Patient[]>(`${this.apiUrl}/auth/patients/`, { headers: this.getHeaders() });\n  }\n  \n  getPatientById(id: number): Observable<Patient> {\n    return this.http.get<Patient>(`${this.apiUrl}/auth/patients/${id}/`, { headers: this.getHeaders() });\n  }\n  \n  addPatient(patient: Patient): Observable<Patient> {\n    return this.http.post<Patient>(`${this.apiUrl}/auth/patients/`, patient, { headers: this.getHeaders() });\n  }\n  \n  updatePatient(patient: Patient): Observable<Patient> {\n    return this.http.put<Patient>(`${this.apiUrl}/auth/patients/${patient.id}/`, patient, { headers: this.getHeaders() });\n  }\n  \n  deletePatient(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/auth/patients/${id}/`, { headers: this.getHeaders() });\n  }\n  \n  refreshToken(): Observable<any> {\n    const refreshToken = localStorage.getItem('refresh_token');\n    return this.http.post(`${this.apiUrl}/auth/token/refresh/`, { refresh: refreshToken });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}