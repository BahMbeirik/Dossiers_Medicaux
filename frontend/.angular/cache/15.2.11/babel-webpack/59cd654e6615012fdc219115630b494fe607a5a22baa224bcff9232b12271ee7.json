{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_8_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" Invalid email format \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, LoginComponent_div_8_small_1_Template, 2, 0, \"small\", 13);\n    i0.ɵɵtemplate(2, LoginComponent_div_8_small_2_Template, 2, 0, \"small\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"small\");\n    i0.ɵɵtext(2, \"Password is required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.errorMessage, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"input-error\": a0\n  };\n};\nexport class LoginComponent {\n  ngOnInit() {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      this.router.navigate(['/home']); // توجه المستخدم للصفحة الرئيسية إذا كان مسجلاً\n    }\n  }\n\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.isLoading = false;\n    this.errorMessage = null;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n  isFieldInvalid(field) {\n    const formField = this.loginForm.get(field);\n    return !!(formField?.invalid && (formField?.dirty || formField?.touched));\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = null;\n      this.authService.login(this.loginForm.value).subscribe({\n        next: response => {\n          // Navigate to OTP verification page\n          this.router.navigate(['/verify-otp'], {\n            state: {\n              email: this.loginForm.value.email\n            }\n          });\n          this.isLoading = false;\n        },\n        error: error => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.error || 'Login failed. Please try again.';\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 22,\n      vars: 12,\n      consts: [[1, \"login-container\"], [1, \"login-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter your email\", 3, \"ngClass\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter your password\", 3, \"ngClass\"], [\"class\", \"server-error\", 4, \"ngIf\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"register-link\"], [\"routerLink\", \"/register\"], [1, \"error-message\"], [4, \"ngIf\"], [1, \"server-error\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(2, \"h2\");\n          i0.ɵɵtext(3, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 3, 2, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n          i0.ɵɵtext(11, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 7);\n          i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 3, 0, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 1, \"div\", 8);\n          i0.ɵɵelementStart(15, \"button\", 9);\n          i0.ɵɵtext(16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 10)(18, \"p\");\n          i0.ɵɵtext(19, \"Don't have an account? \");\n          i0.ɵɵelementStart(20, \"a\", 11);\n          i0.ɵɵtext(21, \"Register here\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.isFieldInvalid(\"email\")));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isFieldInvalid(\"email\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.isFieldInvalid(\"password\")));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isFieldInvalid(\"password\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid || ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"Logging in...\" : \"Login\", \" \");\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".login-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  height: 100vh;\\r\\n  background-color: #f0f2f5;\\r\\n}\\r\\n.login-form[_ngcontent-%COMP%] {\\r\\n  background-color: white;\\r\\n  padding: 30px;\\r\\n  border-radius: 8px;\\r\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\r\\n  width: 100%;\\r\\n  max-width: 400px;\\r\\n}\\r\\n.form-group[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 10px;\\r\\n  border: 1px solid #ddd;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.input-error[_ngcontent-%COMP%] {\\r\\n  border-color: red;\\r\\n}\\r\\n.error-message[_ngcontent-%COMP%] {\\r\\n  color: red;\\r\\n  font-size: 0.8em;\\r\\n  margin-top: 5px;\\r\\n}\\r\\n.server-error[_ngcontent-%COMP%] {\\r\\n  color: red;\\r\\n  text-align: center;\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 10px;\\r\\n  background-color: #4CAF50;\\r\\n  color: white;\\r\\n  border: none;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:disabled {\\r\\n  background-color: #cccccc;\\r\\n  cursor: not-allowed;\\r\\n}\\r\\n.register-link[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  margin-top: 15px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYix5QkFBeUI7QUFDM0I7QUFDQTtFQUNFLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHdDQUF3QztFQUN4QyxXQUFXO0VBQ1gsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGVBQWU7QUFDakI7QUFDQTtFQUNFLFVBQVU7RUFDVixrQkFBa0I7RUFDbEIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjJmNTtcclxufVxyXG4ubG9naW4tZm9ybSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogMzBweDtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm94LXNoYWRvdzogMCA0cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG59XHJcbi5mb3JtLWdyb3VwIHtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcbi5mb3JtLWdyb3VwIGxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuLmZvcm0tZ3JvdXAgaW5wdXQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbn1cclxuLmlucHV0LWVycm9yIHtcclxuICBib3JkZXItY29sb3I6IHJlZDtcclxufVxyXG4uZXJyb3ItbWVzc2FnZSB7XHJcbiAgY29sb3I6IHJlZDtcclxuICBmb250LXNpemU6IDAuOGVtO1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG4uc2VydmVyLWVycm9yIHtcclxuICBjb2xvcjogcmVkO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcbmJ1dHRvbiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5idXR0b246ZGlzYWJsZWQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XHJcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcclxufVxyXG4ucmVnaXN0ZXItbGluayB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbi10b3A6IDE1cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","LoginComponent","ngOnInit","token","localStorage","getItem","router","navigate","constructor","fb","authService","loginForm","group","email","required","password","isFieldInvalid","field","formField","get","invalid","dirty","touched","onSubmit","valid","isLoading","errorMessage","login","value","subscribe","next","response","state","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\login\\login.component.ts","C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  isLoading = false;\n  errorMessage: string | null = null;\n\n  ngOnInit(): void {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      this.router.navigate(['/home']); // توجه المستخدم للصفحة الرئيسية إذا كان مسجلاً\n    }\n  }\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  isFieldInvalid(field: string): boolean {\n    const formField = this.loginForm.get(field);\n    return !!(formField?.invalid && (formField?.dirty || formField?.touched));\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = null;\n\n      this.authService.login(this.loginForm.value).subscribe({\n        next: (response) => {\n          // Navigate to OTP verification page\n          this.router.navigate(['/verify-otp'], { \n            state: { \n              email: this.loginForm.value.email \n            } \n          });\n          this.isLoading = false;\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.error || 'Login failed. Please try again.';\n        }\n      });\n    }\n  }\n}\n","<div class=\"login-container\">\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"login-form\">\n    <h2>Login</h2>\n    \n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input \n        type=\"email\" \n        id=\"email\"\n        formControlName=\"email\" \n        placeholder=\"Enter your email\"\n        [ngClass]=\"{'input-error': isFieldInvalid('email')}\"\n      >\n      <div *ngIf=\"isFieldInvalid('email')\" class=\"error-message\">\n        <small *ngIf=\"loginForm.get('email')?.errors?.['required']\">\n          Email is required\n        </small>\n        <small *ngIf=\"loginForm.get('email')?.errors?.['email']\">\n          Invalid email format\n        </small>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input \n        type=\"password\" \n        id=\"password\"\n        formControlName=\"password\" \n        placeholder=\"Enter your password\"\n        [ngClass]=\"{'input-error': isFieldInvalid('password')}\"\n      >\n      <div *ngIf=\"isFieldInvalid('password')\" class=\"error-message\">\n        <small>Password is required</small>\n      </div>\n    </div>\n\n    <div *ngIf=\"errorMessage\" class=\"server-error\">\n      {{ errorMessage }}\n    </div>\n\n    <button \n      type=\"submit\" \n      [disabled]=\"loginForm.invalid || isLoading\"\n    >\n      {{ isLoading ? 'Logging in...' : 'Login' }}\n    </button>\n\n    <div class=\"register-link\">\n      <p>Don't have an account? \n        <a routerLink=\"/register\">Register here</a>\n      </p>\n    </div>\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}