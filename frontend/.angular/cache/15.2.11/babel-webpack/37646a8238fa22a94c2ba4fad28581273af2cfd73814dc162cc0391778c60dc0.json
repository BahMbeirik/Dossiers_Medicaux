{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.isLoading = false;\n    this.errorMessage = null;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n  isFieldInvalid(field) {\n    const formField = this.loginForm.get(field);\n    return !!(formField?.invalid && (formField?.dirty || formField?.touched));\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = null;\n      this.authService.login(this.loginForm.value).subscribe({\n        next: response => {\n          // Navigate to OTP verification page\n          this.router.navigate(['/verify-otp'], {\n            state: {\n              email: this.loginForm.value.email\n            }\n          });\n          this.isLoading = false;\n        },\n        error: error => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.error || 'Login failed. Please try again.';\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 3,\n      vars: 0,\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n          i0.ɵɵtext(2, \"Login page\");\n          i0.ɵɵelementEnd()();\n        }\n      },\n      styles: [\".login-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  height: 100vh;\\r\\n  background-color: #f0f2f5;\\r\\n}\\r\\n.login-form[_ngcontent-%COMP%] {\\r\\n  background-color: white;\\r\\n  padding: 30px;\\r\\n  border-radius: 8px;\\r\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\r\\n  width: 100%;\\r\\n  max-width: 400px;\\r\\n}\\r\\n.form-group[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 10px;\\r\\n  border: 1px solid #ddd;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.input-error[_ngcontent-%COMP%] {\\r\\n  border-color: red;\\r\\n}\\r\\n.error-message[_ngcontent-%COMP%] {\\r\\n  color: red;\\r\\n  font-size: 0.8em;\\r\\n  margin-top: 5px;\\r\\n}\\r\\n.server-error[_ngcontent-%COMP%] {\\r\\n  color: red;\\r\\n  text-align: center;\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 10px;\\r\\n  background-color: #4CAF50;\\r\\n  color: white;\\r\\n  border: none;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:disabled {\\r\\n  background-color: #cccccc;\\r\\n  cursor: not-allowed;\\r\\n}\\r\\n.register-link[_ngcontent-%COMP%] {\\r\\n  text-align: center;\\r\\n  margin-top: 15px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYix5QkFBeUI7QUFDM0I7QUFDQTtFQUNFLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLHdDQUF3QztFQUN4QyxXQUFXO0VBQ1gsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGVBQWU7QUFDakI7QUFDQTtFQUNFLFVBQVU7RUFDVixrQkFBa0I7RUFDbEIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSx5QkFBeUI7RUFDekIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjJmNTtcclxufVxyXG4ubG9naW4tZm9ybSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogMzBweDtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYm94LXNoYWRvdzogMCA0cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG59XHJcbi5mb3JtLWdyb3VwIHtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcbi5mb3JtLWdyb3VwIGxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuLmZvcm0tZ3JvdXAgaW5wdXQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbn1cclxuLmlucHV0LWVycm9yIHtcclxuICBib3JkZXItY29sb3I6IHJlZDtcclxufVxyXG4uZXJyb3ItbWVzc2FnZSB7XHJcbiAgY29sb3I6IHJlZDtcclxuICBmb250LXNpemU6IDAuOGVtO1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG4uc2VydmVyLWVycm9yIHtcclxuICBjb2xvcjogcmVkO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcbmJ1dHRvbiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNENBRjUwO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5idXR0b246ZGlzYWJsZWQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XHJcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcclxufVxyXG4ucmVnaXN0ZXItbGluayB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbi10b3A6IDE1cHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,cAAc;EAKzBC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IANhB,cAAS,GAAG,KAAK;IACjB,iBAAY,GAAkB,IAAI;IAOhC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC;KACrC,CAAC;EACJ;EAEAE,cAAc,CAACC,KAAa;IAC1B,MAAMC,SAAS,GAAG,IAAI,CAACP,SAAS,CAACQ,GAAG,CAACF,KAAK,CAAC;IAC3C,OAAO,CAAC,EAAEC,SAAS,EAAEE,OAAO,KAAKF,SAAS,EAAEG,KAAK,IAAIH,SAAS,EAAEI,OAAO,CAAC,CAAC;EAC3E;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACZ,SAAS,CAACa,KAAK,EAAE;MACxB,IAAI,CAACC,SAAS,GAAG,IAAI;MACrB,IAAI,CAACC,YAAY,GAAG,IAAI;MAExB,IAAI,CAACjB,WAAW,CAACkB,KAAK,CAAC,IAAI,CAAChB,SAAS,CAACiB,KAAK,CAAC,CAACC,SAAS,CAAC;QACrDC,IAAI,EAAGC,QAAQ,IAAI;UACjB;UACA,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE;YACpCC,KAAK,EAAE;cACLpB,KAAK,EAAE,IAAI,CAACF,SAAS,CAACiB,KAAK,CAACf;;WAE/B,CAAC;UACF,IAAI,CAACY,SAAS,GAAG,KAAK;QACxB,CAAC;QACDS,KAAK,EAAGA,KAAK,IAAI;UACf,IAAI,CAACT,SAAS,GAAG,KAAK;UACtB,IAAI,CAACC,YAAY,GAAGQ,KAAK,CAACA,KAAK,EAAEA,KAAK,IAAI,iCAAiC;QAC7E;OACD,CAAC;;EAEN;;;uBA1CW5B,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAA6B;MAAAC;MAAAC;MAAAC;QAAA;UCV3BC,2BAAK;UACAA,0BAAU;UAAAA,iBAAI","names":["Validators","LoginComponent","constructor","fb","authService","router","loginForm","group","email","required","password","isFieldInvalid","field","formField","get","invalid","dirty","touched","onSubmit","valid","isLoading","errorMessage","login","value","subscribe","next","response","navigate","state","error","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\login\\login.component.ts","C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  isLoading = false;\n  errorMessage: string | null = null;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  isFieldInvalid(field: string): boolean {\n    const formField = this.loginForm.get(field);\n    return !!(formField?.invalid && (formField?.dirty || formField?.touched));\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = null;\n\n      this.authService.login(this.loginForm.value).subscribe({\n        next: (response) => {\n          // Navigate to OTP verification page\n          this.router.navigate(['/verify-otp'], { \n            state: { \n              email: this.loginForm.value.email \n            } \n          });\n          this.isLoading = false;\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.error || 'Login failed. Please try again.';\n        }\n      });\n    }\n  }\n}\n","<div>\n  <p>Login page</p>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}