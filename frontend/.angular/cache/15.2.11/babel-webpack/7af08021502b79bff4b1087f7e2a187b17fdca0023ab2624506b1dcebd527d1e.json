{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../services/patient.service\";\nexport class HomeComponent {\n  constructor(patientService) {\n    this.patientService = patientService;\n    this.patients = [];\n  }\n  ngOnInit() {\n    this.loadPatients();\n  }\n  loadPatients() {\n    this.patientService.getPatients().subscribe(patients => this.patients = patients);\n  }\n  deletePatient(id) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer ce patient ?')) {\n      this.patientService.deletePatient(id).subscribe(() => {\n        this.patients = this.patients.filter(p => p.id !== id);\n      });\n    }\n  }\n  editPatient(patient) {\n    // Implémenter la logique d'édition\n  }\n  showAddForm() {\n    // Implémenter la logique d'ajout\n  }\n  static {\n    this.ɵfac = function HomeComponent_Factory(t) {\n      return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.PatientService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HomeComponent,\n      selectors: [[\"app-home\"]],\n      decls: 0,\n      vars: 0,\n      template: function HomeComponent_Template(rf, ctx) {},\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,aAAa;EAGtBC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAFpC,aAAQ,GAAc,EAAE;EAEgC;EAEtDC,QAAQ;IACJ,IAAI,CAACC,YAAY,EAAE;EACvB;EAEAA,YAAY;IACR,IAAI,CAACF,cAAc,CAACG,WAAW,EAAE,CAC5BC,SAAS,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAC;EACxD;EAEAC,aAAa,CAACC,EAAU;IACpB,IAAIC,OAAO,CAAC,iDAAiD,CAAC,EAAE;MAC5D,IAAI,CAACR,cAAc,CAACM,aAAa,CAACC,EAAE,CAAC,CAChCH,SAAS,CAAC,MAAK;QACZ,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACI,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;MAC1D,CAAC,CAAC;;EAEd;EAEAI,WAAW,CAACC,OAAgB;IACxB;EAAA;EAGJC,WAAW;IACP;EAAA;;;uBA5BKf,aAAa;IAAA;EAAA;;;YAAbA,aAAa;MAAAgB;MAAAC;MAAAC;MAAAC;MAAAC;IAAA;EAAA","names":["HomeComponent","constructor","patientService","ngOnInit","loadPatients","getPatients","subscribe","patients","deletePatient","id","confirm","filter","p","editPatient","patient","showAddForm","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PatientService, Patient } from './../services/patient.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  patients: Patient[] = [];\n\n    constructor(private patientService: PatientService) { }\n\n    ngOnInit(): void {\n        this.loadPatients();\n    }\n\n    loadPatients(): void {\n        this.patientService.getPatients()\n            .subscribe(patients => this.patients = patients);\n    }\n\n    deletePatient(id: number): void {\n        if (confirm('Êtes-vous sûr de vouloir supprimer ce patient ?')) {\n            this.patientService.deletePatient(id)\n                .subscribe(() => {\n                    this.patients = this.patients.filter(p => p.id !== id);\n                });\n        }\n    }\n\n    editPatient(patient: Patient): void {\n        // Implémenter la logique d'édition\n    }\n\n    showAddForm(): void {\n        // Implémenter la logique d'ajout\n    }\n\n\n\n  // patients: Patient[] = [];\n\n  // constructor(private patientService: PatientService, private router: Router) {}\n\n  // ngOnInit(): void {\n  //   const token = localStorage.getItem('access_token');\n  //   if (!token) {\n  //       this.router.navigate(['/login']);\n  //       return;\n  //   }\n\n  //   // Optionnel : vérifier si le jeton est expiré\n  //   // const tokenDecoded = this.decodeToken(token);\n  //   // if (tokenDecoded.exp < Date.now() / 1000) {\n  //   //     this.router.navigate(['/login']);\n  //   // }\n  // }\n\n  // // decodeToken(token: string): any {\n  // //     const payload = token.split('.')[1];\n  // //     return JSON.parse(atob(payload));\n  // // }\n\n\n\n  // navigateToDetails(id: number): void {\n  //   this.router.navigate(['/details', id]);\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}