{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../services/patient.service\";\nfunction HomeComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function HomeComponent_tr_23_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const patient_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editPatient(patient_r1));\n    });\n    i0.ɵɵtext(15, \"Modifier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function HomeComponent_tr_23_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const patient_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deletePatient(patient_r1.id));\n    });\n    i0.ɵɵtext(17, \"Supprimer\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.numero_identite);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.nom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.prenom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.age);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.numero_telephone);\n  }\n}\nexport class HomeComponent {\n  constructor(patientService) {\n    this.patientService = patientService;\n    this.patients = [];\n  }\n  ngOnInit() {\n    this.loadPatients();\n  }\n  loadPatients() {\n    this.patientService.getPatients().subscribe(patients => this.patients = patients);\n  }\n  deletePatient(id) {\n    if (confirm('Êtes-vous sûr de vouloir supprimer ce patient ?')) {\n      this.patientService.deletePatient(id).subscribe(() => {\n        this.patients = this.patients.filter(p => p.id !== id);\n      });\n    }\n  }\n  editPatient(patient) {\n    // Implémenter la logique d'édition\n  }\n  showAddForm() {\n    // Implémenter la logique d'ajout\n  }\n  static {\n    this.ɵfac = function HomeComponent_Factory(t) {\n      return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.PatientService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HomeComponent,\n      selectors: [[\"app-home\"]],\n      decls: 24,\n      vars: 1,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"btn\", \"btn-primary\", \"mb-3\", 3, \"click\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-info\", \"btn-sm\", \"mr-2\", 3, \"click\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"]],\n      template: function HomeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Liste des Patients\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_3_listener() {\n            return ctx.showAddForm();\n          });\n          i0.ɵɵtext(4, \"Ajouter Patient\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"table\", 2)(6, \"thead\")(7, \"tr\")(8, \"th\");\n          i0.ɵɵtext(9, \"ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"th\");\n          i0.ɵɵtext(11, \"Num\\u00E9ro Identit\\u00E9\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"th\");\n          i0.ɵɵtext(13, \"Nom\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"th\");\n          i0.ɵɵtext(15, \"Pr\\u00E9nom\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"th\");\n          i0.ɵɵtext(17, \"Age\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"th\");\n          i0.ɵɵtext(19, \"T\\u00E9l\\u00E9phone\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"th\");\n          i0.ɵɵtext(21, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(22, \"tbody\");\n          i0.ɵɵtemplate(23, HomeComponent_tr_23_Template, 18, 6, \"tr\", 3);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(23);\n          i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n        }\n      },\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;IA4BUA,0BAAqC;IAC7BA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,aAAe;IAAAA,iBAAK;IACxBA,2BAAI;IAAAA,aAA4B;IAAAA,iBAAK;IACrCA,2BAAI;IACyCA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAoB;IAAA,EAAC;IAACA,yBAAQ;IAAAA,iBAAS;IACzFA,kCAA2E;IAArCA;MAAA;MAAA;MAAA;MAAA,OAASA,kDAA0B;IAAA,EAAC;IAACA,0BAAS;IAAAA,iBAAS;;;;IAR7FA,eAAc;IAAdA,mCAAc;IACdA,eAA2B;IAA3BA,gDAA2B;IAC3BA,eAAe;IAAfA,oCAAe;IACfA,eAAkB;IAAlBA,uCAAkB;IAClBA,eAAe;IAAfA,oCAAe;IACfA,eAA4B;IAA5BA,iDAA4B;;;ACzB9C,OAAM,MAAOC,aAAa;EAGtBC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAFpC,aAAQ,GAAc,EAAE;EAEgC;EAEtDC,QAAQ;IACJ,IAAI,CAACC,YAAY,EAAE;EACvB;EAEAA,YAAY;IACR,IAAI,CAACF,cAAc,CAACG,WAAW,EAAE,CAC5BC,SAAS,CAACC,QAAQ,IAAI,IAAI,CAACA,QAAQ,GAAGA,QAAQ,CAAC;EACxD;EAEAC,aAAa,CAACC,EAAU;IACpB,IAAIC,OAAO,CAAC,iDAAiD,CAAC,EAAE;MAC5D,IAAI,CAACR,cAAc,CAACM,aAAa,CAACC,EAAE,CAAC,CAChCH,SAAS,CAAC,MAAK;QACZ,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACI,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC;MAC1D,CAAC,CAAC;;EAEd;EAEAI,WAAW,CAACC,OAAgB;IACxB;EAAA;EAGJC,WAAW;IACP;EAAA;;;uBA5BKf,aAAa;IAAA;EAAA;;;YAAbA,aAAa;MAAAgB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDE1BrB,8BAA4B;UACtBA,kCAAkB;UAAAA,iBAAK;UAC3BA,iCAA6D;UAAxBA;YAAA,OAASsB,iBAAa;UAAA,EAAC;UAACtB,+BAAe;UAAAA,iBAAS;UAErFA,gCAAqB;UAGLA,kBAAE;UAAAA,iBAAK;UACXA,2BAAI;UAAAA,0CAAe;UAAAA,iBAAK;UACxBA,2BAAI;UAAAA,oBAAG;UAAAA,iBAAK;UACZA,2BAAI;UAAAA,4BAAM;UAAAA,iBAAK;UACfA,2BAAI;UAAAA,oBAAG;UAAAA,iBAAK;UACZA,2BAAI;UAAAA,oCAAS;UAAAA,iBAAK;UAClBA,2BAAI;UAAAA,wBAAO;UAAAA,iBAAK;UAGxBA,8BAAO;UACHA,+DAWK;UACTA,iBAAQ;;;UAZoBA,gBAAW;UAAXA,sCAAW","names":["i0","HomeComponent","constructor","patientService","ngOnInit","loadPatients","getPatients","subscribe","patients","deletePatient","id","confirm","filter","p","editPatient","patient","showAddForm","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\home\\home.component.html","C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\home\\home.component.ts"],"sourcesContent":["<!-- <div class=\"container\">\n  <div class=\"d-flex justify-content-between p-2\">\n    <h1>Patients</h1>\n    <button routerLink=\"/add\" class=\"btn btn-outline-primary btn-sm \">Ajouter un Patient</button>\n  </div>\n  <div *ngFor=\"let patient of patients\" class=\"patient-item\">\n    <p (click)=\"navigateToDetails(patient.id!)\">\n      {{ patient.nom }} - {{ patient.numero_identite }}\n    </p>\n  </div>\n</div> -->\n<div class=\"container mt-4\">\n  <h2>Liste des Patients</h2>\n  <button class=\"btn btn-primary mb-3\" (click)=\"showAddForm()\">Ajouter Patient</button>\n  \n  <table class=\"table\">\n      <thead>\n          <tr>\n              <th>ID</th>\n              <th>Numéro Identité</th>\n              <th>Nom</th>\n              <th>Prénom</th>\n              <th>Age</th>\n              <th>Téléphone</th>\n              <th>Actions</th>\n          </tr>\n      </thead>\n      <tbody>\n          <tr *ngFor=\"let patient of patients\">\n              <td>{{patient.id}}</td>\n              <td>{{patient.numero_identite}}</td>\n              <td>{{patient.nom}}</td>\n              <td>{{patient.prenom}}</td>\n              <td>{{patient.age}}</td>\n              <td>{{patient.numero_telephone}}</td>\n              <td>\n                  <button class=\"btn btn-info btn-sm mr-2\" (click)=\"editPatient(patient)\">Modifier</button>\n                  <button class=\"btn btn-danger btn-sm\" (click)=\"deletePatient(patient.id!)\">Supprimer</button>\n              </td>\n          </tr>\n      </tbody>\n  </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PatientService, Patient } from './../services/patient.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  patients: Patient[] = [];\n\n    constructor(private patientService: PatientService) { }\n\n    ngOnInit(): void {\n        this.loadPatients();\n    }\n\n    loadPatients(): void {\n        this.patientService.getPatients()\n            .subscribe(patients => this.patients = patients);\n    }\n\n    deletePatient(id: number): void {\n        if (confirm('Êtes-vous sûr de vouloir supprimer ce patient ?')) {\n            this.patientService.deletePatient(id)\n                .subscribe(() => {\n                    this.patients = this.patients.filter(p => p.id !== id);\n                });\n        }\n    }\n\n    editPatient(patient: Patient): void {\n        // Implémenter la logique d'édition\n    }\n\n    showAddForm(): void {\n        // Implémenter la logique d'ajout\n    }\n\n\n\n  // patients: Patient[] = [];\n\n  // constructor(private patientService: PatientService, private router: Router) {}\n\n  // ngOnInit(): void {\n  //   const token = localStorage.getItem('access_token');\n  //   if (!token) {\n  //       this.router.navigate(['/login']);\n  //       return;\n  //   }\n\n  //   // Optionnel : vérifier si le jeton est expiré\n  //   // const tokenDecoded = this.decodeToken(token);\n  //   // if (tokenDecoded.exp < Date.now() / 1000) {\n  //   //     this.router.navigate(['/login']);\n  //   // }\n  // }\n\n  // // decodeToken(token: string): any {\n  // //     const payload = token.split('.')[1];\n  // //     return JSON.parse(atob(payload));\n  // // }\n\n\n\n  // navigateToDetails(id: number): void {\n  //   this.router.navigate(['/details', id]);\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}