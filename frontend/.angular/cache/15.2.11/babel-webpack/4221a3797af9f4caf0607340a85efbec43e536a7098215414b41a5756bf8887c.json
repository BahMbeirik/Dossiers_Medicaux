{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction OtpVerificationComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" OTP is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction OtpVerificationComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" OTP must be a 6-digit number. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction OtpVerificationComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.errorMessage, \" \");\n  }\n}\nfunction OtpVerificationComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n}\nexport class OtpVerificationComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.email = '';\n    this.isLoading = false;\n    this.errorMessage = null;\n    this.otpForm = this.fb.group({\n      otp: ['', [Validators.required, Validators.pattern(/^\\d{6}$/)]]\n    });\n    const navigation = this.router.getCurrentNavigation();\n    this.email = navigation?.extras.state?.['email'] || '';\n  }\n  ngOnInit() {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      this.authService.isAuthenticated(token).subscribe({\n        next: isValid => {\n          if (isValid) {\n            this.router.navigate(['/home']);\n          }\n        },\n        error: () => {\n          localStorage.removeItem('access_token');\n        }\n      });\n    }\n    if (!this.email) {\n      this.router.navigate(['/login']);\n    }\n  }\n  onSubmit() {\n    if (this.otpForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = null;\n      this.authService.verifyOTP({\n        email: this.email,\n        otp: this.otpForm.value.otp\n      }).subscribe({\n        next: response => {\n          // Save tokens in localStorage\n          localStorage.setItem('access_token', response.access_token);\n          localStorage.setItem('refresh_token', response.refresh_token);\n          // Navigate to the home page\n          this.router.navigate(['/home']);\n          this.isLoading = false;\n        },\n        error: error => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.error || 'OTP verification failed';\n        }\n      });\n    }\n  }\n  static {\n    this.ɵfac = function OtpVerificationComponent_Factory(t) {\n      return new (t || OtpVerificationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: OtpVerificationComponent,\n      selectors: [[\"app-otp-verification\"]],\n      decls: 17,\n      vars: 8,\n      consts: [[1, \"otp-verification-container\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"otp\"], [\"id\", \"otp\", \"type\", \"text\", \"formControlName\", \"otp\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm\", 4, \"ngIf\"], [1, \"invalid-feedback\"], [1, \"alert\", \"alert-danger\"], [1, \"spinner-border\", \"spinner-border-sm\"]],\n      template: function OtpVerificationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n          i0.ɵɵtext(4, \"Verify OTP\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function OtpVerificationComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n          i0.ɵɵtext(9, \"Enter OTP\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 7);\n          i0.ɵɵtemplate(11, OtpVerificationComponent_div_11_Template, 2, 0, \"div\", 8);\n          i0.ɵɵtemplate(12, OtpVerificationComponent_div_12_Template, 2, 0, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(13, OtpVerificationComponent_div_13_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementStart(14, \"button\", 10);\n          i0.ɵɵtemplate(15, OtpVerificationComponent_span_15_Template, 1, 0, \"span\", 11);\n          i0.ɵɵtext(16, \" Verify \");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.otpForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_1_0 = ctx.otpForm.get(\"otp\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.otpForm.get(\"otp\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.otpForm.get(\"otp\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"required\"]);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.otpForm.get(\"otp\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"pattern\"]);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading || ctx.otpForm.invalid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".otp-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  height: 100vh;\\r\\n  background-color: #f0f2f5;\\r\\n}\\r\\n.otp-form[_ngcontent-%COMP%] {\\r\\n  background-color: white;\\r\\n  padding: 30px;\\r\\n  border-radius: 8px;\\r\\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\\r\\n  width: 100%;\\r\\n  max-width: 400px;\\r\\n  text-align: center;\\r\\n}\\r\\n.otp-input-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  padding: 10px;\\r\\n  font-size: 1.2em;\\r\\n  text-align: center;\\r\\n  letter-spacing: 10px;\\r\\n  border: 1px solid #ddd;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.input-error[_ngcontent-%COMP%] {\\r\\n  border-color: red;\\r\\n}\\r\\n.error-message[_ngcontent-%COMP%] {\\r\\n  color: red;\\r\\n  font-size: 0.8em;\\r\\n  margin-top: 5px;\\r\\n}\\r\\n.server-error[_ngcontent-%COMP%] {\\r\\n  color: red;\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n.otp-actions[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  gap: 10px;\\r\\n  margin-top: 20px;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  padding: 10px;\\r\\n  border: none;\\r\\n  border-radius: 4px;\\r\\n  cursor: pointer;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:first-child {\\r\\n  background-color: #4CAF50;\\r\\n  color: white;\\r\\n}\\r\\n.resend-btn[_ngcontent-%COMP%] {\\r\\n  background-color: #f0f0f0;\\r\\n  color: #333;\\r\\n}\\r\\nbutton[_ngcontent-%COMP%]:disabled {\\r\\n  background-color: #cccccc;\\r\\n  cursor: not-allowed;\\r\\n}\\r\\n.back-to-login[_ngcontent-%COMP%] {\\r\\n  margin-top: 15px;\\r\\n  text-align: center;\\r\\n}\\r\\n.back-to-login[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\r\\n  color: #007bff;\\r\\n  text-decoration: underline;\\r\\n  cursor: pointer;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvb3RwLXZlcmlmaWNhdGlvbi9vdHAtdmVyaWZpY2F0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQix3Q0FBd0M7RUFDeEMsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixvQkFBb0I7RUFDcEIsc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGVBQWU7QUFDakI7QUFDQTtFQUNFLFVBQVU7RUFDVixtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsU0FBUztFQUNULGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsYUFBYTtFQUNiLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjtBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7QUFDZDtBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLFdBQVc7QUFDYjtBQUNBO0VBQ0UseUJBQXlCO0VBQ3pCLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsY0FBYztFQUNkLDBCQUEwQjtFQUMxQixlQUFlO0FBQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiLm90cC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGYyZjU7XHJcbn1cclxuLm90cC1mb3JtIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICBwYWRkaW5nOiAzMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1heC13aWR0aDogNDAwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbi5vdHAtaW5wdXQtY29udGFpbmVyIGlucHV0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGZvbnQtc2l6ZTogMS4yZW07XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGxldHRlci1zcGFjaW5nOiAxMHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG59XHJcbi5pbnB1dC1lcnJvciB7XHJcbiAgYm9yZGVyLWNvbG9yOiByZWQ7XHJcbn1cclxuLmVycm9yLW1lc3NhZ2Uge1xyXG4gIGNvbG9yOiByZWQ7XHJcbiAgZm9udC1zaXplOiAwLjhlbTtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuLnNlcnZlci1lcnJvciB7XHJcbiAgY29sb3I6IHJlZDtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcbi5vdHAtYWN0aW9ucyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGdhcDogMTBweDtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcbmJ1dHRvbiB7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5idXR0b246Zmlyc3QtY2hpbGQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0Q0FGNTA7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcbi5yZXNlbmQtYnRuIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4gIGNvbG9yOiAjMzMzO1xyXG59XHJcbmJ1dHRvbjpkaXNhYmxlZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjY2NjYztcclxuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xyXG59XHJcbi5iYWNrLXRvLWxvZ2luIHtcclxuICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4uYmFjay10by1sb2dpbiBhIHtcclxuICBjb2xvcjogIzAwN2JmZjtcclxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","OtpVerificationComponent","constructor","fb","authService","router","otpForm","group","otp","required","pattern","navigation","getCurrentNavigation","email","extras","state","ngOnInit","token","localStorage","getItem","isAuthenticated","subscribe","next","isValid","navigate","error","removeItem","onSubmit","valid","isLoading","errorMessage","verifyOTP","value","response","setItem","access_token","refresh_token","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\otp-verification\\otp-verification.component.ts","C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\otp-verification\\otp-verification.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-otp-verification',\n  templateUrl: './otp-verification.component.html',\n  styleUrls: ['./otp-verification.component.css']\n})\nexport class OtpVerificationComponent implements OnInit {\n  otpForm: FormGroup;\n  email: string = '';\n  isLoading = false;\n  errorMessage: string | null = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.otpForm = this.fb.group({\n      otp: ['', [Validators.required, Validators.pattern(/^\\d{6}$/)]]\n    });\n\n    const navigation = this.router.getCurrentNavigation();\n    this.email = navigation?.extras.state?.['email'] || '';\n  }\n\n  ngOnInit() {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      this.authService.isAuthenticated(token).subscribe({\n        next: (isValid) => {\n          if (isValid) {\n            this.router.navigate(['/home']);\n          }\n        },\n        error: () => {\n          localStorage.removeItem('access_token');\n        }\n      });\n    }\n\n    if (!this.email) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n  onSubmit() {\n    if (this.otpForm.valid) {\n      this.isLoading = true;\n      this.errorMessage = null;\n  \n      this.authService.verifyOTP({\n        email: this.email,\n        otp: this.otpForm.value.otp\n      }).subscribe({\n        next: (response) => {\n          // Save tokens in localStorage\n          localStorage.setItem('access_token', response.access_token);\n          localStorage.setItem('refresh_token', response.refresh_token);\n  \n          // Navigate to the home page\n          this.router.navigate(['/home']);\n          this.isLoading = false;\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.error || 'OTP verification failed';\n        }\n      });\n    }\n  }\n  \n}\n","<div class=\"otp-verification-container\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h2>Verify OTP</h2>\n    </div>\n    <div class=\"card-body\">\n      <form [formGroup]=\"otpForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"otp\">Enter OTP</label>\n          <input\n            id=\"otp\"\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"otp\"\n            [class.is-invalid]=\"otpForm.get('otp')?.invalid && otpForm.get('otp')?.touched\"\n          />\n          <div class=\"invalid-feedback\" *ngIf=\"otpForm.get('otp')?.errors?.['required']\">\n            OTP is required.\n          </div>\n          <div class=\"invalid-feedback\" *ngIf=\"otpForm.get('otp')?.errors?.['pattern']\">\n            OTP must be a 6-digit number.\n          </div>\n        </div>\n\n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n          {{ errorMessage }}\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary btn-block\" [disabled]=\"isLoading || otpForm.invalid\">\n          <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm\"></span>\n          Verify\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}