{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.registerForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n      confirm_password: ['', [Validators.required]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n  passwordMatchValidator(form) {\n    const password = form.get('password');\n    const confirmPassword = form.get('confirm_password');\n    return password?.value === confirmPassword?.value ? null : {\n      passwordMismatch: true\n    };\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.authService.register(this.registerForm.value).subscribe({\n        next: () => this.router.navigate(['/login']),\n        error: err => console.error(err)\n      });\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAS5D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAEd,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAChCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACQ,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,CAAC,CAAC;MACrCE,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,CAAC;KAC7C,EAAE;MAAEG,UAAU,EAAE,IAAI,CAACC;IAAsB,CAAE,CAAC;EACjD;EAEAA,sBAAsB,CAACC,IAAe;IACpC,MAAMJ,QAAQ,GAAGI,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC;IACrC,MAAMC,eAAe,GAAGF,IAAI,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAEpD,OAAOL,QAAQ,EAAEO,KAAK,KAAKD,eAAe,EAAEC,KAAK,GAC7C,IAAI,GACJ;MAAEC,gBAAgB,EAAE;IAAI,CAAE;EAChC;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACb,YAAY,CAACc,KAAK,EAAE;MAC3B,IAAI,CAAChB,WAAW,CAACiB,QAAQ,CAAC,IAAI,CAACf,YAAY,CAACW,KAAK,CAAC,CAC/CK,SAAS,CAAC;QACTC,IAAI,EAAE,MAAM,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC5CC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAACC,GAAG;OAClC,CAAC;;EAER;CACD;AAjCYzB,iBAAiB,eAL7BF,SAAS,CAAC;EACT6B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW7B,iBAAiB,CAiC7B;SAjCYA,iBAAiB","names":["Component","Validators","RegisterComponent","constructor","fb","authService","router","registerForm","group","email","required","password","confirm_password","validators","passwordMatchValidator","form","get","confirmPassword","value","passwordMismatch","onSubmit","valid","register","subscribe","next","navigate","error","err","console","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  registerForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.registerForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n      confirm_password: ['', [Validators.required]]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator(form: FormGroup) {\n    const password = form.get('password');\n    const confirmPassword = form.get('confirm_password');\n    \n    return password?.value === confirmPassword?.value \n      ? null \n      : { passwordMismatch: true };\n  }\n\n  onSubmit() {\n    if (this.registerForm.valid) {\n      this.authService.register(this.registerForm.value)\n        .subscribe({\n          next: () => this.router.navigate(['/login']),\n          error: (err) => console.error(err)\n        });\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}