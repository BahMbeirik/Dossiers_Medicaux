{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n  }\n  register(userData) {\n    return this.http.post(`${this.apiUrl}/auth/register/`, userData);\n  }\n  login(loginData) {\n    return this.http.post(`${this.apiUrl}/auth/login/`, loginData);\n  }\n  verifyOTP(otpData) {\n    return this.http.post(`${this.apiUrl}/auth/verify-otp/`, otpData);\n  }\n  setTokens(tokens) {\n    localStorage.setItem('access_token', tokens.access);\n    localStorage.setItem('refresh_token', tokens.refresh);\n  }\n  logout() {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAGH,WAAW,CAACI,MAAM;EAEI;EAEvCC,QAAQ,CAACC,QAAa;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,iBAAiB,EAAEE,QAAQ,CAAC;EAClE;EAEAE,KAAK,CAACC,SAAc;IAClB,OAAO,IAAI,CAACN,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,cAAc,EAAEK,SAAS,CAAC;EAChE;EAEAC,SAAS,CAACC,OAAY;IACpB,OAAO,IAAI,CAACR,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,mBAAmB,EAAEO,OAAO,CAAC;EACnE;EAEAC,SAAS,CAACC,MAA2C;IACnDC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEF,MAAM,CAACG,MAAM,CAAC;IACnDF,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEF,MAAM,CAACI,OAAO,CAAC;EACvD;EAEAC,MAAM;IACJJ,YAAY,CAACK,UAAU,CAAC,cAAc,CAAC;IACvCL,YAAY,CAACK,UAAU,CAAC,eAAe,CAAC;EAC1C;;;uBAzBWlB,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAmB,SAAXnB,WAAW;MAAAoB,YAFV;IAAM;EAAA","names":["environment","AuthService","constructor","http","apiUrl","register","userData","post","login","loginData","verifyOTP","otpData","setTokens","tokens","localStorage","setItem","access","refresh","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  register(userData: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/auth/register/`, userData);\n  }\n\n  login(loginData: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/auth/login/`, loginData);\n  }\n\n  verifyOTP(otpData: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/auth/verify-otp/`, otpData);\n  }\n\n  setTokens(tokens: { access: string, refresh: string }) {\n    localStorage.setItem('access_token', tokens.access);\n    localStorage.setItem('refresh_token', tokens.refresh);\n  }\n\n  logout() {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}