{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PatientService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/auth/patients/`;\n  }\n  static {\n    this.ɵfac = function PatientService_Factory(t) {\n      return new (t || PatientService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PatientService,\n      factory: PatientService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,gCAAgC;;;AAc5D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,GAAGH,WAAW,CAACI,MAAM,iBAAiB;EAEhB;;;uBAH5BH,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAI,SAAdJ,cAAc;MAAAK,YAFb;IAAM;EAAA","names":["environment","PatientService","constructor","http","apiUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\Dossiers Medicaux\\frontend\\src\\app\\services\\patient.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\nexport interface Patient {\n  id?: number;\n  numero_identite: string;\n  nom: string;\n  prenom: string;\n  age: number;\n  numero_telephone: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n  private apiUrl = `${environment.apiUrl}/auth/patients/`;\n\n  constructor(private http: HttpClient) {}\n\n//   /**\n//    * إعداد الهيدرز مع توكن المصادقة\n//    */\n//   private getHeaders(): HttpHeaders {\n//     const token = localStorage.getItem('access_token');\n//     if (!token) {\n//       throw new Error('Access token is missing.');\n//     }\n//     return new HttpHeaders({\n//       'Content-Type': 'application/json',\n//       Authorization: `Bearer ${token}`\n//     });\n//   }\n\n//   /**\n//    * جلب جميع المرضى\n//    */\n//   getPatients(): Observable<Patient[]> {\n//     return this.http.get<Patient[]>(this.apiUrl, { headers: this.getHeaders() }).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n\n//   /**\n//    * جلب مريض حسب المعرف\n//    */\n//   getPatientById(id: number): Observable<Patient> {\n//     return this.http.get<Patient>(`${this.apiUrl}${id}/`, { headers: this.getHeaders() }).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n\n//   /**\n//    * إضافة مريض جديد\n//    */\n//   addPatient(patient: Patient): Observable<Patient> {\n//     const headers = this.getHeaders();  \n//     return this.http.post<Patient>(this.apiUrl, patient, { headers }).pipe(\n//       catchError(this.handleError)\n//     );\n// }\n\n\n//   /**\n//    * تعديل بيانات مريض\n//    */\n//   updatePatient(patient: Patient): Observable<Patient> {\n//     return this.http.put<Patient>(`${this.apiUrl}${patient.id}/`, patient, { headers: this.getHeaders() }).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n\n//   /**\n//    * حذف مريض\n//    */\n//   deletePatient(id: number): Observable<void> {\n//     return this.http.delete<void>(`${this.apiUrl}${id}/`, { headers: this.getHeaders() }).pipe(\n//       catchError(this.handleError)\n//     );\n//   }\n\n//   /**\n//    * معالجة الأخطاء\n//    */\n//   private handleError(error: any): Observable<never> {\n//     let errorMsg: string;\n//     if (error.status === 400) {\n//       errorMsg = 'Invalid data submitted.';\n//     } else if (error.status === 401) {\n//       errorMsg = 'Unauthorized access. Please log in again.';\n//     } else {\n//       errorMsg = 'Something went wrong. Please try again.';\n//     }\n//     console.error('PatientService Error:', error);\n//     return throwError(() => new Error(errorMsg));\n//   }\n  \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}